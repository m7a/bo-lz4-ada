<?xml version="1.0" encoding="UTF-8"?>
<project default="build">

<!-- APPLICATION METADATA -->
<property name="mdpc.name"    value="liblz4-ada-dev"/>
<property name="mdpc.section" value="libdevel"/>
<!-- currently restricted due to install path x86_64-linux-gnu -->
<property name="mdpc.arch"    value="amd64"/>
<property name="mdpc.descrs"  value="Ada LZ4 Extractor Library"/>
<property name="mdpc.copyright.file"><![CDATA[
Files: *
Copyright: (c) 2022, 2023 Ma_Sys.ma <info@masysma.net>, (c) 2018 Stephan Brumme
License: Expat
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"),
 to deal in the Software without restriction, including without limitation
 the rights to use, copy, modify, merge, publish, distribute, sublicense,
 and/or sell copies of the Software, and to permit persons to whom the
 Software is furnished to do so, subject to the following conditions:
 .
 The above copyright notice and this permission notice shall be included
 in all copies or substantial portions of the Software.
 .
 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 SOFTWARE.
]]></property>
<property name="mdpc.descrl">
 This package provides an Ada implementation of an LZ4 Decompressor
 as a shared library. This implementation only supports decompression!
 .
 LZ4 Frame Format is supported according to specification v.1.6.3.
 Legacy Frame Format is supported.
 Skippable Frames are supported.
 Provided checksums are verified.
 Provided length information is verified.
 Concatenated frames can be decompressed.
 Big Endian architectures are UNSUPPORTED.
 Dictionaries are UNSUPPORTED.
 .
 Performance is slower compared to reference and C implementations:
 The unlz4 C program is at least three times as fast. The Ada
 implementation's performance may still suffice for a range of
 applications since it exceeds the 1000 MiB/s limit on modern systems.
</property>

<property name="mdpc.file.install">
lib/liblz4ada.so /usr/lib/x86_64-linux-gnu
lib/lz4ada.ali /usr/lib/x86_64-linux-gnu/ada/adalib/lz4
lib/lz4ada.ads /usr/share/ada/adainclude/lz4
tool_unlz4ada/unlz4ada /usr/bin
tool_unlz4ada_simple/unlz4ada_simple /usr/bin
tool_xxhash32ada/xxhash32ada /usr/bin
tool_lz4hdrinfo/lz4hdrinfo /usr/bin
</property>

<!-- CI INTEGRATION -->
<target name="autoci" depends="autopackage"/>

<!-- CONSTANT TPL IMPORT -->
<property environment="env"/>
<condition property="masysma.internal.includepath.rel" value="${env.MDVL_CI_PHOENIX_ROOT}" else=".."><isset property="env.MDVL_CI_PHOENIX_ROOT"/></condition>
<property name="masysma.internal.includepath" location="${masysma.internal.includepath.rel}"/>
<property name="masysma.internal.loadpath" value="${masysma.internal.includepath}/co-build/ant-build-template.xml"/>
<condition property="masysma.internal.load" value="file://${masysma.internal.loadpath}" else="https://raw.githubusercontent.com/m7a/co-build/master/ant-build-template.xml"><resourceexists><file file="${masysma.internal.loadpath}"/></resourceexists></condition>
<import><url url="${masysma.internal.load}"/></import>

</project>
